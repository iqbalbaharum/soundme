import "@fluencelabs/aqua-lib/builtin.aqua"
import "@0x3zero/aqua-lib/builtin.aqua" 
import "./dht.aqua"

const PEER_ID ?= "12D3KooWHBG9oaVx4i3vi6c1rSBUm7MLBmyGmmbHoZ23pmjDCnvK"
const DHT_SERVICE_ID ?= "bc818a2d-deee-4e0a-b3d7-2aa5f0bc6ef3"

func generate_block(key: string, public_key: string, dt: string) -> string:
  on HOST_PEER_ID:
    serialize_dt <- BlockFormatter.serialize(public_key, dt, "")
    <- serialize_dt

-- Add beat to the sheet
func add_beat(key: string, public_key: string, content: string, signature: string):
  on PEER_ID:
    Dht DHT_SERVICE_ID

    -- Check if there is record of dht
    dht <- Dht.get_latest_record_by_pk_and_key(key, public_key)

    -- format content to Block
    formatted <- BlockFormatter.serialize(dht.alias, content, dht.cid)

    -- push Block to ipfs
    result <- IpfsDag.put(formatted, "", 0)
    
    -- -- Add data to DHT table
    if dht.cid != "":
      Dht.insert(key, dht.alias, result.cid, public_key, signature, content, "secp256k1")
    else:
      Dht.insert(key, "", result.cid, public_key, signature, content, "secp256k1")